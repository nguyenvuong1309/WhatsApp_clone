name: Build & upload to Firebase App Distribution

on:
  workflow_dispatch: # To trigger manual build
  push:
    branches:
      - build

jobs:
  android-build:
    name: Android Build
    runs-on: ubuntu-latest # Using ubuntu latest version / or you can use a specific version

    steps:
    - name: Check out Git repository # Clone the repo to local CI workspace
      uses: actions/checkout@v2

    - name: Set up our JDK environment # Setup JDK environment: mandatory as we need to build android project
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '11'

    - name: Get yarn cache directory path
      id: yarn-cache
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Restore node_modules from cache
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install dependencies # Install project deps with frozen-lockfile to ensure same package versions
      run: yarn install --frozen-lockfile

    - name: Cache Gradle Wrapper # Configure cache for Gradle wrapper to reduce build time
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/wrapper/
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-wrapper-

    - name: Cache Gradle Dependencies
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches/
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-caches-

    - name: Make Gradlew Executable
      run: cd android && chmod +x ./gradlew

    - name: Generate App APK
      run: |
        cd android && ./gradlew assembleRelease -no-daemon

    - name: Sign APK
      id: sign_app
      uses: roadkil/sign-android-release@v1
      with:
        releaseDirectory: android/app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
        alias: ${{ secrets.ANDROID_ALIAS }}
        keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

    - name: Upload artifact to Firebase App Distribution
      uses: wzieba/Firebase-Distribution-Github-Action@v1
      with:
        appId: ${{ secrets.FIREBASE_APP_ID }}
        serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
        groups: Internal
        file: android/app/build/outputs/apk/release/app-release.apk
